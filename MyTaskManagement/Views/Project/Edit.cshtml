@model MyTaskManagement.Core.ViewModel.EditViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Project.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Project.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.DeadTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.DeadTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.DeadTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Project.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Project.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Client</label>
            <select name="ClientId" class="col-md-10 form-control   " required>
                @*<option value="" disabled selected>Choose your Client</option>*@
                @foreach (var c in Model.Clients)
                {
                    if (c.Id == Model.Project.ClientId)
                    {
                        <option value="@c.Name" selected="selected">@c.Name</option>

                    }
                    <option value="@c.Name">@c.Name</option>

                }

            </select>

        </div>

        <p>_________________________________ Users On Project_______________________________</p>

        @foreach (var applicationUser in Model.Project.Users)
        {
            <div>

                <button type="button" class="btn btn-lg btn-primary" disabled>@applicationUser.FirstName</button>
                @Html.ActionLink("Delete", "DeleteUser", new { id = applicationUser.Id , idProject = Model.Project.Id }, new { @class = "btn btn-danger" })


            </div>

        }
        <p>_________________________________All Users_________________________________ </p>


        @foreach (var applicationUser in Model.Users)
        {
            <div>

                <button type="button" class="btn btn-lg btn-primary" disabled>@applicationUser.FirstName</button>
                @Html.ActionLink("Add", "AddUserToProject", new { idUser = applicationUser.Id  ,idProject =Model.Project.Id }, new { @class = "btn btn-success" })

               

            </div>

        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}
 