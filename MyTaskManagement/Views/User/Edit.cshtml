@using Microsoft.AspNet.Identity.EntityFramework
@model  MyTaskManagement.Core.ViewModel.EditUserViewModel

@{
    /**/

    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User.Id)




        <div class="form-group">
            @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.JopTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.JopTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.JopTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.HourlyRate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.HourlyRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.O_T_H_Rate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.O_T_H_Rate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.O_T_H_Rate, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <label class="control-label col-md-2">Role</label>


            @if (Model.User.Roles != null && Model.User.Roles.Count != 0)
            {

                <select name="CurrenrRole" class="col-md-10 form-control " required>
                    @*<option value="" disabled selected>Choose your Role</option>*@
                    @foreach (var r in (List<IdentityRole>)ViewBag.AllRoles)
                    {
                        if (Model.User.Roles.FirstOrDefault().RoleId == r.Id)
                        {

                            <option value="@r.Name" selected="selected">@r.Name</option>

                        }
                        else

                        {
                            <option value="@r.Name">@r.Name</option>

                        }




                    }

                </select>
            }
            else

            {

                //No role for this user !!
                <select name="CurrenrRole" class="col-md-10 form-control " required>
                    <option value="" disabled selected>Choose a Role</option>
                    @foreach (var r in (List<IdentityRole>)ViewBag.AllRoles)
                    {

                        <option value="@r.Name">@r.Name</option>



                    }

                </select>

            }


        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}



 <h3> Employee Scrum</h3>

<table class="table" id="listTask">
    <thead>
        <tr>
            <th>
                <p>TaskId</p>
            </th>
            <th>
                <p>TaskName</p>
            </th>
            <th>
                <p>Project_Id</p>

            </th>

            <th>
                <p><p>StartTime</p></p>

            </th>
            <th>
                <p>DeadTime</p>

            </th>
            <th>
                <p>Description</p>

            </th>

            <th>
                <p>Priority</p>

            </th>

            <th>
                <p>Status</p>

            </th>


            <th>
                <p>Assignee</p>
            </th>
           
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.User.Tasks.ToList())
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Project.Id)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.StartTime)
                </td>
            
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUser.FirstName)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "TTask", new { id = item.Id }, new { @class = "btn btn-success" }) |
                    @Html.ActionLink("Details", "Details", "TTask", new { id = item.Id }, new { @class = "btn btn-info" }) |
                    @Html.ActionLink("Delete", "Delete", "TTask", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>


</table>


<h3> Financial Status</h3>
@using (Html.BeginForm("Edit", "User", FormMethod.Get, new { id = Model.User.Id }))
{

    <select name="month">

        @{
            Dictionary<int, string> Months = Enumerable.Range(1, 12).Select(i => new KeyValuePair<int, string>(i, System.Globalization.DateTimeFormatInfo.CurrentInfo.GetMonthName(i))).ToDictionary(x => x.Key, x => x.Value);


            if ((int)ViewBag.m == 0)
            {
                <option value="0" selected="selected"> </option>

            }
            else
            {
                <option value="0"> </option>

            }

            foreach (var key in Months.Keys)
            {
                if ((int)ViewBag.m == key)
                {//select it
                    <option value="@key" selected="selected"> @Months[key]</option>

                }
                else
                {
                    <option value="@key"> @Months[key]</option>

                }
            }

        }


    </select>

    <select name="year">
        @{
            var listYears = Enumerable.Range(2016, 81).ToList();

            if ((int)ViewBag.y == 0)
            {
                <option value="0" selected="selected"> </option>

            }
            else
            {
                <option value="0"> </option>

            }


            foreach (var i in listYears)
            {
                if ((int)ViewBag.y == i)
                {//select it
                    <option value="@i" selected="selected"> @i</option>

                }
                else
                {
                    <option value="@i"> @i</option>


                }
            }


        }


    </select>

    <input type="submit" value="Sort" class="btn btn-default" />

}
@*<table class="table" id="listFinancial">
    <thead>
        <tr>
            <th>
                <p>Date</p>
            </th>
            <th>
                <p>Proj Id</p>
            </th>
            <th>
                <p>TaskId</p>

            </th>

            <th>
                <p><p>W Hours</p></p>

            </th>
            <th>
                <p>OTHours</p>

            </th>
            <th>
                <p>Wh rate</p>

            </th>

            <th>
                <p>O.T.h rate</p>

            </th>

            <th>
                <p>Total</p>

            </th>


            <th>
                <p>Bonus</p>
            </th>
            <th></th>

        </tr>
    </thead>
    <tbody  >
        @foreach (var item in Model.Financialstatuses.ToList())
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.pro__id)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.task__id)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.W_Hours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OTHours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Wh_Rate) $
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.OTH_Rate) $
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Total) $
                <td>
                    @{
                        var bounes = item.Bonus;
                    }
                    @Html.DisplayFor(modelItem => item.Bonus) $
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", "TTask", new { id = item.Id }, new { @class = "btn btn-success" }) |
                    @Html.ActionLink("Details", "Details", "TTask", new { id = item.Id }, new { @class = "btn btn-info" }) |
                    @Html.ActionLink("Delete", "Delete", "TTask", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>


</table>*@
@*<div>
    <h3>Total</h3>
    <p>
        @{
            var totalPrice = 0.0;
        }
        @foreach (var item in Model.User.FinancialstatusList.ToList())
        {
            totalPrice = totalPrice + item.Total;
        }

        @totalPrice $
    </p>
</div>

<div>
    <h3>
        Defered Ammount
    </h3>
    <p>
        @{
            var DeferedAmmount = (totalPrice * 0.20);


        }
        @DeferedAmmount $
    </p>
</div>

<div>
    <h3>
        Bonus
    </h3>
    <p>
        @{
            var totalBounes = 0.0;
        }
        @foreach (var item in Model.User.FinancialstatusList.ToList())
        {
            totalBounes = totalBounes + item.Bonus;
        }

        @totalBounes $
    </p>
</div>

<div>
    <h3>
        Monthly Payment

    </h3>
    <p>
        @{
            var MonthlyPayment
                = (totalPrice - DeferedAmmount + totalBounes);


        }
        @MonthlyPayment $
    </p>
</div>*@


@using (Html.BeginForm("Export", "FinancialStatus", FormMethod.Post))
{
    <input type="hidden" name="GridHtml" />
    <input type="submit" id="btnSubmit" value="Export To PDF" class="btn btn-danger" />
}



<div>
    @Html.ActionLink("Back to List", "ListUser")
</div>





@*----------------------------------------------------------------*@

@*<div  hidden=""  id="hiddinToPdf">
    <table class="table table-bordered"  border="1" >
        <thead  class="thead-dark">
            <tr >
              
                <th>
                    <p>Date</p>
                </th>
                <th>
                    <p>Proj Id</p>
                </th>
                <th>
                    <p>TaskId</p>

                </th>

                <th>
                    <p>W Hours</p>

                </th>
                <th>
                    <p>OTHours</p>

                </th>
                <th>
                    <p>Wh rate</p>

                </th>

                <th>
                    <p>O.T.h rate</p>

                </th>

                <th>
                    <p>Total</p>

                </th>


                <th>
                    <p>Bonus</p>
                </th>


            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Financialstatuses.ToList())
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.pro__id)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.task__id)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.W_Hours)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OTHours)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Wh_Rate) $
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.OTH_Rate) $
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Total) $
                    <td>
                        @{
                            var bounes = item.Bonus;
                        }
                        @Html.DisplayFor(modelItem => item.Bonus) $
                    </td>

                </tr>
            }
        </tbody>


    </table>
    <div>
        <h3>Total</h3>
        <p>
            @{
                var totalPrice1 = 0.0;
            }
            @foreach (var item in Model.User.FinancialstatusList.ToList())
            {
                totalPrice1 = totalPrice1 + item.Total;
            }

            @totalPrice1 $
        </p>
    </div>

    <div>
        <h3>
            Defered Ammount
        </h3>
        <p>
            @{
                var DeferedAmmount1 = (totalPrice1 * 0.20);


            }
            @DeferedAmmount1 $
        </p>
    </div>

    <div>
        <h3>
            Bonus
        </h3>
        <p>
            @{
                var totalBounes1 = 0.0;
            }
            @foreach (var item in Model.User.FinancialstatusList.ToList())
            {
                totalBounes1 = totalBounes1 + item.Bonus;
            }

            @totalBounes1 $
        </p>
    </div>

    <div>
        <h3>
            Monthly Payment

        </h3>
        <p>
            @{
                var MonthlyPayment1
                    = (totalPrice1 - DeferedAmmount1 + totalBounes1);


            }
            @MonthlyPayment1 $
        </p>
    </div>
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/dt-1.10.18/datatables.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#listTask").dataTable();
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#listFinancial").dataTable();
        });
    </script>


    @*for pdf*@
    <script type="text/javascript">
        $(function () {
            $("#btnSubmit").click(function () {
                $("input[name='GridHtml']").val($("#hiddinToPdf").html());
            });
        });
    </script>
}
